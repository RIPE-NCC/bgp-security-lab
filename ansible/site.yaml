---

- name: Deploy LXD
  hosts: default
  become: false
  tasks:
    - name: Initialize LXD
      command:
        cmd: lxd init --preseed
        stdin: "{{ lookup('file', 'lxd_preseed.yaml') }}"
        creates: /var/lib/lxd/networks/lxdbr0

    - name: Create first container
      lxd_container:
        name: hostA
        state: started
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: lxd # if you get a 404, try setting protocol: simplestreams
          alias: ubuntu/focal/amd64
        profiles: ["default"]
        wait_for_ipv4_addresses: true


    - name: Install necessary packages
      delegate_to: hostA
      package:
        update_cache: true
        name:
          - python3-apt
          - python3-pip
          - python3
          - tcpdump
          - wget
          - libpcap-dev
          - libssl-dev
          - gcc
          - python3-setuptools
          - git
          - make
          - man
          - nftables
          - nmap
          - nano
          - joe
          - vim

    - name: Upgrade pip3
      delegate_to: hostA
      pip:
        executable: pip3
        state: latest
        name: pip

    - name: Install python packages
      delegate_to: hostA
      pip:
        executable: pip3
        state: latest
        name:
          - scapy[basic]
          - cryptography
          - netaddr

    - name: Clone IPv6 toolkit repository
      delegate_to: hostA
      git:
        repo: https://github.com/fgont/ipv6toolkit
        dest: /usr/src/ipv6toolkit
      register: clone_toolkit

    - name: Compile the IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make all
        chdir: /usr/src/ipv6toolkit
      when: clone_toolkit.changed
      register: compile_toolkit

    - name: Install the IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make install
        chdir: /usr/src/ipv6toolkit
      when: compile_toolkit.changed

    - name: Clone the THC-IPv6 repository
      delegate_to: hostA
      git:
        repo: https://github.com/vanhauser-thc/thc-ipv6
        dest: /usr/src/thc-ipv6
      register: clone_thc

    - name: Compile the THC-IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make
        chdir: /usr/src/thc-ipv6
      when: clone_thc.changed
      register: compile_thc

    - name: Install the THC-IPv6 toolkit
      delegate_to: hostA
      command:
        cmd: make install
        chdir: /usr/src/thc-ipv6
      when: compile_thc.changed

    - name: Clone container
      command:
        cmd: "lxc cp hostA {{ item }}"
        creates: "/var/lib/lxd/containers/{{ item }}"
      with_items:
        - hostB
        - hostC

    - name: Ensure containers are started
      lxd_container:
        name: "{{ item }}"
        state: started
      with_items:
        - hostB
        - hostC

- name: Host provision
  hosts: default
  become: true
  tasks:
    # This takes a looong time
    #
    #- name: Upgrade everything
    #  apt:
    #    upgrade: dist

    - name: Install necessary packages
      apt:
        package:
          - nginx
          - tmux
          - libwebsockets8

    - name: Setup WebSockets connection upgrade
      copy:
        src: nginx/connection_upgrade.conf
        dest: "/etc/nginx/conf.d/"
        mode: 0644
      notify: reload nginx

    - name: Disable absolute redirects
      lineinfile:
        line: "absolute_redirect off;"
        dest: "/etc/nginx/conf.d/no_absolute_redirects.conf"
        create: yes
        mode: 0644
      notify: reload nginx

    - name: Setup ttyd proxy snippet
      copy:
        src: nginx/ttydconsole.conf
        dest: "/etc/nginx/snippets/"
        mode: 0644
      notify: reload nginx

    - name: Enable ttyd proxy snippet
      lineinfile:
        path: "/etc/nginx/sites-available/default"
        line: "include /etc/nginx/snippets/ttydconsole.conf;"
        insertbefore: "^\\s*location / {.*$"
      notify: reload nginx

    - name: Deploy static website
      copy:
        src: ../../labfrontend/_site/
        dest: /var/www/html/
        owner: www-data
        group: www-data
        mode: 0644

    - name: Install fancy 404 page
      lineinfile:
        path: "/etc/nginx/sites-available/default"
        line: "error_page 404 /404.html;"
        insertafter: "^\\s*root /var/www/html;$"
      notify: reload nginx

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: on

    - name: Install ttyd
      # We use a locally complied binary until this gets fixed:
      # https://github.com/tsl0922/ttyd/issues/414
      #
      #get_url:
        #url: https://github.com/tsl0922/ttyd/releases/download/1.6.1/ttyd_linux.x86_64
      copy:
        src: ttyd
        dest: /opt/ttyd
        mode: 0755

    - name: Deploy tmux config file
      copy:
        src: ttyd-tmux.conf
        dest: "/opt/"
        mode: 0644

    - name: Deploy ttyd-container unit files
      copy:
        src: "systemd/{{ item }}"
        dest: "/etc/systemd/system/"
        mode: 0644
      notify: systemctl daemon-reload
      with_items:
        - ttyd-container@.service
        - ttyd-admin.service
        - ttyd-container.target

    - name: Deploy ttyd-container generator
      copy:
        src: systemd/ttyd-container.generator
        dest: "/etc/systemd/system-generators/"
        mode: 0755
      notify: systemctl daemon-reload

    - name: Enable and start ttyd-container target
      service:
        name: ttyd-container.target
        state: started
        enabled: on

    - name: Enable and start ttyd-admin
      service:
        name: ttyd-admin.service
        state: started
        enabled: on

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded

    - name: systemctl daemon-reload
      systemd:
        daemon_reload: yes


...
