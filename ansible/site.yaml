---

- name: Deploy LXD
  hosts: default
  become: false
  tags: container
  tasks:
    - name: Initialize LXD
      command:
        cmd: lxd init --preseed
        stdin: "{{ lookup('file', 'lxd_preseed.yaml') }}"
        creates: /var/snap/lxd/common/state

    - name: Create Ubuntu container for validator
      lxd_container:
        name: validator
        state: started
        devices:
          eth0:
            type: nic
            name: eth0
            nictype: bridged
            parent: lxdbr0
            ipv4.address: 192.0.2.5
            hwaddr: "00:16:3e:ee:00:05"
        ignore_volatile_options: false
        source:
          type: image
          mode: pull
          protocol: simplestreams
          server: https://images.linuxcontainers.org
          alias: ubuntu/focal
        profiles: ["default"]
        wait_for_ipv4_addresses: true

    - name: Install python3-apt
      delegate_to: validator
      command:
        cmd: apt-get -y install python3-apt
        warn: false
        creates: /usr/lib/python3/dist-packages/apt/package.py

    - name: Install necessary packages
      delegate_to: validator
      package:
        update_cache: true
        name:
          - python3-pip
          - python3
          - tcpdump
          - wget
          - libpcap-dev
          - libssl-dev
          - gcc
          - python3-setuptools
          - git
          - make
          - man
          - nftables
          - iptables
          - nmap
          - tshark
          - nano
          - joe
          - vim

    - name: Upgrade pip3
      delegate_to: validator
      pip:
        executable: pip3
        state: latest
        name: pip

    - name: Create Alpine container
      lxd_container:
        name: transit66
        state: started
        devices:
          eth0:
            type: nic
            name: eth0
            nictype: bridged
            parent: lxdbr0
            ipv4.address: 192.0.2.66
            hwaddr: "00:16:3e:ee:01:66"
        ignore_volatile_options: false
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: simplestreams
          alias: alpine/3.15/amd64
        profiles: ["default"]
        wait_for_ipv4_addresses: true

    - name: Check Python3 in the container
      delegate_to: transit66
      raw: python3 /dev/null
      register: python3_check
      failed_when: false
      changed_when: false

    - name: Install Python 3 into Alpine container
      delegate_to: transit66
      raw: apk add python3
      when: python3_check.rc != 0

    - name: Upgrade everything in the container
      delegate_to: transit66
      apk:
        update_cache: yes
        upgrade: yes

    - name: Install FRR into container
      delegate_to: transit66
      apk:
        name:
          - frr
          - frr-rpki

    - name: Ensure IP forwarding is enabled
      delegate_to: transit66
      sysctl:
        sysctl_file: /etc/sysctl.d/forwarding.conf
        name: "{{ item }}"
        value: "1"
        sysctl_set: yes
      with_items:
          - net.ipv4.conf.all.forwarding
          - net.ipv6.conf.all.forwarding
          - net.ipv6.conf.default.forwarding

    - name: Enable and start sysctl in the container
      delegate_to: transit66
      service:
        name: sysctl
        state: started
        enabled: yes

    - name: Clone Alpine containers
      lxd_container:
        name: "{{ item.name }}"
        ignore_volatile_options: false
        devices:
          eth0:
            type: nic
            name: eth0
            nictype: bridged
            parent: lxdbr0
            ipv4.address: "{{ item.ip }}"
            hwaddr: "{{ item.mac }}"
        state: started
        source:
          type: copy
          source: transit66
        profiles: ["default"]
        wait_for_ipv4_addresses: true
      with_items:
        - name: transit99
          mac: 00:16:3e:ee:01:99
          ip: 192.0.2.99
        - name: edge1
          mac: 00:16:3e:ee:0e:01
          ip: 192.0.2.101
        - name: edge2
          mac: 00:16:3e:ee:0e:02
          ip: 192.0.2.102

- name: FRR configuration
  hosts: frr
  tags: frr
  tasks:
    - name: Template common configs
      template:
        src: "frr/{{ item }}.j2"
        dest: "/etc/frr/{{ item }}"
        owner: frr
        group: frr
        mode: 0644
      notify: restart frr
      with_items:
        - vtysh.conf

    - name: Deploy configs
      copy:
        src: "frr/{{ inventory_hostname }}/{{ item }}"
        dest: "/etc/frr/{{ item }}"
        owner: frr
        group: frr
        mode: 0644
      notify: restart frr
      when: "[ playbook_dir, \"files/frr\", inventory_hostname, item]|join('/') is file"
      with_items:
        - zebra.conf
        - bgpd.conf

    - name: Enable FRR daemons
      lineinfile:
        path: "/etc/frr/daemons"
        line: "{{ item }}=yes"
        regexp: "^{{ item }}="
      notify: restart frr
      with_items:
        - bgpd
        #- ospfd
        #- ospf6d
        #- isisd

    - name: Enable RPKI support
      lineinfile:
        path: "/etc/frr/daemons"
        line: "bgpd_options=\"   -A 127.0.0.1 -M rpki\""
        regexp: "^bgpd_options="
      notify: restart frr

    - name: Enable and start frr
      service:
        name: frr
        state: started
        enabled: yes

  handlers:
    - name: restart frr
      service:
        name: frr
        state: restarted

- name: Host provision
  hosts: default
  become: true
  tags: host
  tasks:
    - name: Install python3-apt
      command:
        cmd: apt-get -y install python3-apt
        warn: false
        creates: /usr/lib/python3/dist-packages/apt/package.py

    - name: Import Debian Stretch repo key (for tmux 2.3)
      apt_key:
        url: "https://ftp-master.debian.org/keys/archive-key-9.asc"

    - name: Enable Debian Stretch repo (for tmux 2.3)
      apt_repository:
        repo: deb http://deb.debian.org/debian stretch main

    - name: Check tmux version
      command: tmux -V
      changed_when: false
      ignore_errors: true
      register: tmux_v

    - name: Uninstall newer tmux
      apt:
        package: tmux
        state: absent
        autoremove: yes
      when: tmux_v.stdout != "tmux 2.3"
      ignore_errors: true

    - name: Install tmux dependency
      apt:
        package: libtinfo5

    - name: Install tmux from Debian Stretch
      apt:
        package: tmux
        default_release: stretch

    - name: Install necessary packages
      apt:
        package:
          - nginx
          - libwebsockets8

    - name: Setup WebSockets connection upgrade
      copy:
        src: nginx/connection_upgrade.conf
        dest: "/etc/nginx/conf.d/"
        mode: 0644
      notify: reload nginx

    - name: Disable absolute redirects
      lineinfile:
        line: "absolute_redirect off;"
        dest: "/etc/nginx/conf.d/no_absolute_redirects.conf"
        create: yes
        mode: 0644
      notify: reload nginx

    - name: Setup ttyd proxy snippet
      copy:
        src: nginx/ttydconsole.conf
        dest: "/etc/nginx/snippets/"
        mode: 0644
      notify: reload nginx

    - name: Enable ttyd proxy snippet
      lineinfile:
        path: "/etc/nginx/sites-available/default"
        line: "include /etc/nginx/snippets/ttydconsole.conf;"
        insertbefore: "^\\s*location / {.*$"
      notify: reload nginx

    - name: Deploy static website
      copy:
        src: ../../ripe-app-frontend/build/
        dest: /var/www/html/
        owner: www-data
        group: www-data
        mode: 0644

    - name: Deploy version file
      copy:
        src: ../../version.txt
        dest: /var/www/html/
        owner: www-data
        group: www-data
        mode: 0644

    - name: Route everything to index.html page
      lineinfile:
        path: "/etc/nginx/sites-available/default"
        line: "		try_files $uri /index.html;"
        regexp: '^\s*try_files \$uri'
      notify: reload nginx

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: on

    - name: Download ttyd
      get_url:
        url: https://github.com/tsl0922/ttyd/releases/download/1.6.3/ttyd.x86_64
        dest: /opt/ttyd
        mode: 0755

    - name: Deploy tmux config file
      copy:
        src: tmux.conf
        dest: "/etc/"
        mode: 0644

    - name: Deploy ttyd-container unit files
      copy:
        src: "systemd/{{ item }}"
        dest: "/etc/systemd/system/"
        mode: 0644
      notify: systemctl daemon-reload
      with_items:
        - ttyd-vtysh@.service
        - ttyd-container@.service
        - ttyd-admin.service
        - ttyd-container.target

    - name: Deploy ttyd-container generators
      template:
        src: "{{ item }}"
        dest: "/etc/systemd/system-generators/"
        mode: 0755
      notify: systemctl daemon-reload
      with_items:
        - systemd/ttyd-container.generator
        - systemd/ttyd-vtysh.generator

    - name: Enable and start ttyd-container target
      service:
        name: ttyd-container.target
        state: started
        enabled: on

    - name: Enable and start ttyd-admin
      service:
        name: ttyd-admin.service
        state: started
        enabled: on

    - name: Trim unused Btrfs space for LXD
      command: nsenter -m/run/snapd/ns/lxd.mnt fstrim -av
      become: true
      changed_when: false

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded

    - name: systemctl daemon-reload
      systemd:
        daemon_reload: yes


...
